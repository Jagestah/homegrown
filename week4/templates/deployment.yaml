{{- range $deployName, $deployConfig := .Values.deployments }}
{{- if $deployConfig.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    this-is-an-annotation: "With a string"
  name: {{ $deployName }}
  namespace: {{ $.Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ $.Values.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ $deployName }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ $deployName }}
    spec:
      containers:
      - image: {{ $.Values.image }}
        imagePullPolicy: Always
        name: {{ $.Values.container.name }}
        command:
          {{- range $.Values.command }}
          - "{{ . }}"
          {{- end }}
        args:
          {{- range $deployConfig.args }}
          - "{{ . }}"
          {{- end }}
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
{{- end }}
{{- end }}
